# Generated by Django 2.2.4 on 2019-10-19 12:44

import api.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', api.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('poster_path', models.TextField(default='')),
                ('backdrop_path', models.TextField(default='')),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('iso', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Keyword',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('iso', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Link',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tmdbid', models.IntegerField()),
                ('movieid', models.IntegerField()),
                ('imdbid', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('imdb_id', models.CharField(max_length=100)),
                ('adult', models.BooleanField()),
                ('budget', models.IntegerField(default=0)),
                ('homepage', models.TextField(default='')),
                ('original_language', models.CharField(default='', max_length=10)),
                ('original_title', models.CharField(default='', max_length=200)),
                ('overview', models.TextField(default='')),
                ('popularity', models.FloatField(default=0, null=True)),
                ('poster_path', models.TextField(default='')),
                ('backdrop_path', models.TextField(default='')),
                ('release_date', models.DateField(null=True)),
                ('revenue', models.FloatField(default=0, null=True)),
                ('runtime', models.IntegerField(default=0, null=True)),
                ('status', models.CharField(max_length=50, null=True)),
                ('tagline', models.TextField(default='', null=True)),
                ('title', models.CharField(default='', max_length=200)),
                ('video', models.TextField(null=True)),
                ('vote_average', models.FloatField(default=0, null=True)),
                ('vote_count', models.IntegerField(default=0, null=True)),
                ('view_cnt', models.IntegerField(default=0)),
                ('kmeans_cluster', models.IntegerField(null=True)),
                ('collection', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.Collection')),
                ('genres', models.ManyToManyField(related_name='movies', to='api.Genre')),
                ('keywords', models.ManyToManyField(related_name='movies', to='api.Keyword')),
                ('production_companies', models.ManyToManyField(related_name='movies', to='api.Company')),
                ('production_countries', models.ManyToManyField(related_name='movies', to='api.Country')),
                ('spoken_languages', models.ManyToManyField(related_name='movies', to='api.Language')),
            ],
        ),
        migrations.CreateModel(
            name='UserCluster',
            fields=[
                ('user_id', models.IntegerField(primary_key=True, serialize=False)),
                ('kmeans_cluster', models.IntegerField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.FloatField()),
                ('timestamp', models.DateTimeField()),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Movie')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=10)),
                ('gender', models.CharField(default='M', max_length=10)),
                ('age', models.IntegerField(default=25)),
                ('occupation', models.CharField(max_length=200)),
                ('movie_taste', models.TextField(default='')),
                ('kmeans_cluster', models.IntegerField(null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Crew',
            fields=[
                ('id', models.CharField(max_length=200, primary_key=True, serialize=False)),
                ('department', models.CharField(max_length=100, null=True)),
                ('profile_path', models.TextField(default='')),
                ('gender', models.CharField(max_length=10, null=True)),
                ('name', models.CharField(max_length=50, null=True)),
                ('job', models.CharField(max_length=50, null=True)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Movie')),
            ],
        ),
        migrations.CreateModel(
            name='Cast',
            fields=[
                ('id', models.CharField(max_length=200, primary_key=True, serialize=False)),
                ('character', models.CharField(max_length=100, null=True)),
                ('profile_path', models.TextField(default='')),
                ('gender', models.CharField(max_length=10, null=True)),
                ('name', models.CharField(max_length=50, null=True)),
                ('order', models.IntegerField()),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Movie')),
            ],
        ),
    ]
